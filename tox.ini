[tox]
envlist =
    lint
    {py38,py39,py310,py311}-test
    combine-test-reports
isolated_build = True


[testenv:lint]
description = Run static checkers.
basepython = py310
extras = lint
commands =
    # Check formatting
    black .
    # Check type hinting
    mypy .

[testenv:{py38,py39,py310,py311}-test]
description = Run doc tests and unit tests with all available python versions.
usedevelop = true
package = wheel
extras = test
setenv =
    PY_IGNORE_IMPORTMISMATCH=1 # https://github.com/pytest-dev/pytest/issues/2042
    COVERAGE_FILE = reports{/}.coverage.{envname}
commands =
    # Run tests and doctests from .py files
    pytest --junitxml=reports/pytest.xml.{envname} {posargs}


[testenv:combine-test-reports]
description = Combine test and coverage data from multiple test runs.
skip_install = true
setenv =
    COVERAGE_FILE = reports/.coverage
depends = {py38,py39,py310,py311}-test
deps =
    junitparser
    coverage[toml]
commands =
    junitparser merge --glob reports/pytest.xml.* reports/pytest.xml
    coverage combine --keep
    # after figuring out how to make sure that data is actually collected, activate report generation
    # coverage html --data-file reports/.coverage


# [testenv:docs]
# description = Test and build the docs.
# extras = docs
# allowlist_externals = sphinx-build
# commands =
#   sphinx-build -b html -d "docs/build/doctrees" "docs/source/" "docs/build/html"

# [testenv:build]
# description = Build the package.
# extras = build
# commands =
